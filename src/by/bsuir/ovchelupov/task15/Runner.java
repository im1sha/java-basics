package by.bsuir.ovchelupov.task15;

import by.bsuir.ovchelupov.task12.Book;
import by.bsuir.ovchelupov.utils.Scanner;

import java.util.Comparator;
import java.util.LinkedList;

/**
 * Class to show implementation of task 15
 */
public class Runner {

    private Runner() {
    }

    /**
     * Creates book by user input
     *
     * @return Book generated by user input
     */
    private static Book getBookFromInput() {

        var scanner = new Scanner();
        System.out.print("Enter book title: ");
        String title = scanner.getString();

        System.out.print("Enter book author: ");
        String author = scanner.getString();

        System.out.print("Enter book price: ");
        int price = scanner.getNonNegativeInt();

        System.out.print("Enter book ISBN: ");
        String isbn = scanner.getString();

        return new Book(title, author, price, isbn);
    }

    /**
     * Creates list of all comparators to show
     *
     * @return List of all comparators to show
     */
    private static LinkedList<Comparator<Book>> getComparators() {

        LinkedList<Comparator<Book>> comparators = new LinkedList<>();

        comparators.add(new BookTitleComparator());
        comparators.add(new BookTitleAuthorComparator());
        comparators.add(new BookAuthorTitleComparator());
        comparators.add(new BookAuthorTitlePriceComparator());

        return comparators;
    }

    /**
     * Starts the program
     *
     * @param args arguments, not in use
     */
    public static void main(String[] args) {

        LinkedList<Book> bookList = new LinkedList<>();
        LinkedList<Comparator<Book>> comparators = getComparators();

        System.out.print("Enter number of books : ");

        var scanner = new Scanner();
        int booksCount = scanner.getNonNegativeInt();

        for (int i = 0; i < booksCount; i++) {
            try {
                System.out.println("Enter book " + (i + 1) + " out of " + booksCount + " info");
                bookList.add(getBookFromInput());
            } catch (IllegalArgumentException e) {
                System.out.println("Input error: " + e.getMessage());
                i--;
            }
        }

        for (Comparator<Book> comparator : comparators) {
            bookList.sort(comparator);

            System.out.println("Books sorted by " + comparator.toString().
                    replaceAll("\\w+\\.", "") + ": ");

            System.out.println('\t' + bookList.toString());
        }
    }
}
